StartupsController

[HttpGet]  
        [Authorize(Roles = "Admin")]
        public ActionResult CasePreview(string id)
        {
            if (id == null)
            {
                return new HttpStatusCodeResult(HttpStatusCode.BadRequest);
            }
            Models.IdeaCarrier.Startup startup = db.Startups.Find(id);
            if (startup == null)
            {
                return HttpNotFound();
            }
            return View(startup);
        }

        [Authorize(Roles = "Admin")] //,Investor
        public ActionResult GeneratePDF(string id)
        {
            //return new Rotativa.ActionAsPdf("CasePreview/"+id); ViewAsPdf
            try
            {
                return new Rotativa.ActionAsPdf("CasePreview", new { id });
            }
            catch(Exception e)
            {
                return RedirectToAction("Details", new { id });
            }
        }
----------------------------
_ProjectForm_Budget.cshtml
7-23
        <table class="borderless">
            <tr>
                @{
                    if (Model.ProjectFundingDivisions != null && Model.ProjectFundingDivisions.Any())
                    {
                        for (var j = 0; j < Model.ProjectFundingDivisions.Count(); j++)
                        {
                            <td>@Html.DisplayFor(model => model.ProjectFundingDivisions[j].FundingDivision.FundingDivisionName)</td>
                            int percentage = Model.ProjectFundingDivisions[j].Percentage;
                            <td>@Html.Raw((percentage < 10 ? "&nbsp;" : "") + percentage.ToString() + " %  ") </td>
                            <td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span class="hidden-print">@Html.ActionLink("Change value", "Edit",                             "FundingDivisionStartups", new { id = Model.ProjectFundingDivisions[j].Id, fundingDivisionName =                             Model.ProjectFundingDivisions[j].FundingDivision.FundingDivisionName }, new { @class = "btn btn-success" })</span></td>
                            @:</tr><tr>
                        }
                    }
                }
            </tr>
        </table>
------------------------
EditAdmin
25-35
<div class="form-group">
            @if (!string.IsNullOrEmpty(Model.ProjectSummary))
            {
                @Html.LabelFor(model => model.ProjectSummary, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                @Html.TextAreaFor(model => model.ProjectSummary, 15, 150, new { htmlAttributes = new { @class = "form-control", @placeholder = "no HTML" } }) @*HTML not allowed*@
                @Html.ValidationMessageFor(model => model.ProjectSummary, "", new { @class = "text-danger" })
                </div>
            }
            else { @Html.Raw("<h3>No project summary</h3><br />"); }
        </div>
------------------
StartupsController
445-449
 var fundingDivisionStartups = db.FundingDivisionStartups.Where(fds => fds.StartupID == id).ToList();
            foreach (var fundingDivisionStartup in fundingDivisionStartups)
            {
                db.FundingDivisionStartups.Remove(fundingDivisionStartup);
            }

854-858
startup.Approved = !(startup.Approved);
            if (startup.Approved) startup.ApprovedByID = User.Identity.GetUserId(); //<-------------------------
            else startup.ApprovedByID = null;

            db.Entry(startup).State = EntityState.Modified;
            db.SaveChanges();
113, 129-
if (!string.IsNullOrEmpty(startup.ApprovedByID))
                {
                    ViewBag.ApprovedBy = db.Users.Where(u => u.Id == startup.ApprovedByID).FirstOrDefault().UserName;
                }
-----------------
InvestmentsController
ViewBag.estimatedExitPlanVMViewModel ==> ViewBag.estimatedExitPlanViewModel
-----------------------------
Models
/MMM/MatchMaking
bool==>bool?
IdeaCarrier/Startups.cs
userId { get {
  return base.Id;
} set; }
rad 185-
Investor/
InvestorEstimatedExitPlanViewModel
8: InvestorEstimatedExitPlanVíewModel ==> InvestorEstimatedExitPlanViewModel
-----------
Views
/MatchMakings
Details.com
Results.cshtml
/Startups
ProjectDetails
_ProjectFormBudget.cshtml
FundingDivisionStartups/
Edit 46: "Edit" ==> "ProjectForm"
/Investments
_ProfileForm_Team
41: selectedSkills ==> selectedTeamSkills
_ProfileForm_Budget
8: EoS.Models.Investor.InvestorEstimatedExitPlanVíewModel
----------------------
MatchMakingsController

----------

TeamSkills

-------------------------------
-------------------------------
[Required(AllowEmptyStrings = false)]



