@model EoS.Models.IdeaCarrier.StartupProjectViewModel

<div class="@(ViewBag.Unanswered == "FundingPhase" ? "form-group warning" : "form-group")">
    @Html.LabelFor(model => model.FundingPhaseID, htmlAttributes: new { @class = "control-label col-md-2", @style = "text-align:left" })
    <div class="col-md-10">
        @Html.DropDownListFor(model => model.FundingPhaseID, Model.FundingPhaseList, "Please select a funding phase", new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.FundingPhaseID, "", new { @class = "text-danger" })
    </div>
</div>

<div class="@(ViewBag.Unanswered == "Funding" ? "form-group warning" : "form-group")">
    @Html.LabelFor(model => model.FundingAmountID, htmlAttributes: new { @class = "control-label col-md-2", @style = "text-align:left" })
    <div class="col-md-10">
        @Html.DropDownListFor(model => model.FundingAmountID, Model.FundingAmountList, "Please select a funding need", new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.FundingAmountID, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.FutureFundingNeeded, htmlAttributes: new { @class = "control-label col-md-2", @style = "text-align:left" })
    <div class="col-md-9">
        <div class="checkbox col-md-10">
            @Html.EditorFor(model => model.FutureFundingNeeded)
            @Html.ValidationMessageFor(model => model.FutureFundingNeeded, "", new { @class = "text-danger" })
        </div>
    </div>
</div>

<div class="@(ViewBag.Unanswered == "AlreadySpentTime" ? "form-group warning" : "form-group")">
    @Html.LabelFor(model => model.AlreadySpentTime, htmlAttributes: new { @class = "control-label col-md-2", @style = "text-align:left" })
    <div class="col-md-10">
        @Html.EditorFor(model => model.AlreadySpentTime, new { htmlAttributes = new { @class = "form-control", @placeholder = "In term of hours, 0 for none" } })
        @Html.ValidationMessageFor(model => model.AlreadySpentTime, "", new { @class = "text-danger" })
    </div>
</div>

<div class="@(ViewBag.Unanswered == "AlreadySpentMoney" ? "form-group warning" : "form-group")">
    @Html.LabelFor(model => model.AlreadySpentMoney, htmlAttributes: new { @class = "control-label col-md-2", @style = "text-align:left" })
    <div class="col-md-10">
        @Html.EditorFor(model => model.AlreadySpentMoney, new { htmlAttributes = new { @class = "form-control", @placeholder = "In term of €1000 amount, 0 for none" } })
        @Html.ValidationMessageFor(model => model.AlreadySpentMoney, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.WillSpendOwnMoney, htmlAttributes: new { @class = "control-label col-md-2", @style = "text-align:left" })
    <div class="col-md-9">
        <div class="checkbox col-md-10">
            @Html.EditorFor(model => model.WillSpendOwnMoney)
            @Html.ValidationMessageFor(model => model.WillSpendOwnMoney, "", new { @class = "text-danger" })
        </div>
    </div>
</div>

<hr />
@if (string.IsNullOrEmpty(ViewBag.Unanswered))
{
    <div class="col-md-offset-4">
        <input type="button" value="Save your answers for the questions in this tab Funding" class="btn btn-warning btn-sm" style="color:black;max-width:500px" onclick="SaveData()" />
    </div>
    <div class="col-md-offset-2">
        <h5 class="text-danger">You have to answer all the necessary questions in all tabs before you may submit the form.</h5>
    </div>
}
else
{
    @Html.ActionLink("Cancel submission of form", "SubmitProjectForm", new { id = Model.StartupID, cancel = true, redirect = "ProjectForm", redirectTab = "Funding" }, new { @id = "cancelProjectFormSubmission", @class = "btn btn-danger" })
}

