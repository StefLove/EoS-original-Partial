@model EoS.Models.IdeaCarrier.StartupAddProjectViewModel

@{
    ViewBag.Title = "New startup project";
    //HtmlHelper.ClientValidationEnabled = false;
}

<h2>@ViewBag.Title</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal" id="myForm">

        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })


        <div class="form-group">
            @*@Html.LabelFor(model => model.ProjectSummary, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <div class="col-md-10 col-md-offset-1">
               @Html.TextArea("myTextArea", (String)ViewBag.IdeaCarrierMessage, 10, 50, new { @class = "form-control" }) @*<-----SelectList*@
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2">
                @Html.LabelFor(model => model.StartupName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.StartupName, new { htmlAttributes = new { @class = "form-control", placeholder = "This is for you only" }  })
                    @Html.ValidationMessageFor(model => model.StartupName, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2">
                @Html.LabelFor(model => model.CountryID, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">                              @*Model.Countries*@
                    @Html.DropDownListFor(model => model.CountryID, (SelectList)ViewBag.CountryId, "Select:", new { @class = "form-control", @onchange = "toggleDIvDisplay(this.value, " + @ViewBag.SwedishCountryId + ")" })
                    @Html.ValidationMessageFor(model => model.CountryID, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>



        <div class="form-group col-md-offset-5" id="divtwo" style="display:none">
            <div class="col-md-offset-2">
                @Html.LabelFor(model => model.SwedishRegionID, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">                                   @*Model.SwedishRegions*@
                    @Html.DropDownListFor(model => model.SwedishRegionID, (SelectList)ViewBag.RegionsId, "Select:", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.SwedishRegionID, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        @*<div class="form-group">
                @Html.LabelFor(model => model.ProjectDomainID, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.ProjectDomainID, (SelectList)ViewBag.projectDomainId, String.Empty, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.ProjectDomainID, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ProjectSummary, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextAreaFor(model => model.ProjectSummary, 15, 100, new { htmlAttributes = new { @class = "form-control" }, @onkeyup = "countChar(this)", maxlength = "1500" })
                    @Html.ValidationMessageFor(model => model.ProjectSummary, "", new { @class = "text-danger" })
                    <label id="charcounter" style="color:green"></label>
                </div>

            </div>


            <div class="form-group">
                @Html.LabelFor(model => model.FundingPhaseID, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.FundingPhaseID, (SelectList)ViewBag.FundingPhaseId, String.Empty, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.FundingPhaseID, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.FundingAmountID, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.FundingAmountID, (SelectList)ViewBag.FundingNeedId, String.Empty, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.FundingAmountID, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.FutureFundingNeeded, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.FutureFundingNeeded)
                        @Html.ValidationMessageFor(model => model.FutureFundingNeeded, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.EstimatedExitPlanID, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.EstimatedExitPlanID, (SelectList)ViewBag.EstimatedExitPlanId, String.Empty, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.EstimatedExitPlanID, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.EstimatedBreakEven, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.EstimatedBreakEven, new { htmlAttributes = new { @class = "form-control", placeholder = "In Term of Years" } })
                    @Html.ValidationMessageFor(model => model.EstimatedBreakEven, "", new { @class = "text-danger" })
                </div>
            </div>*@

        @*<div class="editor-field">
            @foreach (var item in Model.FundingDivisions)
            {
                @Html.CheckBox(item.FundingDivisionName)
            }*@
        @*@Html.CheckBox(Model.FundingDivisions)*@
        @*@Html.CheckBoxListFor(model => model, Model.SubscriptionSources)*@
        @*@Html.ValidationMessageFor(model => model.SelectedSources)*@
        @*</div>*@

        @*<div class="form-group">
                @Html.LabelFor(model => model.TeamMemberSize, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.TeamMemberSize, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.TeamMemberSize, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.GoalTeamSize, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.GoalTeamSize, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.GoalTeamSize, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.TeamExperince, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.TeamExperince, new { htmlAttributes = new { @class = "form-control", placeholder = "In Term of Years" } })
                    @Html.ValidationMessageFor(model => model.TeamExperince, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.TeamVision, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.TeamVision)
                        @Html.ValidationMessageFor(model => model.TeamVision, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.FixedRole, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.FixedRole)
                        @Html.ValidationMessageFor(model => model.FixedRole, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.IncomeStream, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.IncomeStream, new { htmlAttributes = new { @class = "form-control" , placeholder = "In Term of Years" } })
                    @Html.ValidationMessageFor(model => model.IncomeStream, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.InnovationLevelID, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.InnovationLevelID, (SelectList)ViewBag.InnovationLevelId, String.Empty, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.InnovationLevelID, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ScalabilityID, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.ScalabilityID, (SelectList)ViewBag.ScalabilityId, String.Empty, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.ScalabilityID, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.DeadlineDate, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.DeadlineDate, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.DeadlineDate, "", new { @class = "text-danger" })
                </div>
            </div>*@

        @*@Html.Partial("UploadFile")*@

        <div class="form-group">
            <div class="col-md-offset-5 col-md-10">
                @*<input type="submit" value="Start Form" class="btn btn-default"  name="submitCommand" />*@
                <input type="submit" value="Start Project Form" class="btn btn-primary" name="submitCommand" /> @*<------"Proceed to the Project Form"*@
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to Startup Projects", "Index")
</div>


@section Scripts {
    <script type="text/javascript" src="~/Scripts/eosJavaScripts.js"></script>
}