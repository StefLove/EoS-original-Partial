@model EoS.Models.IdeaCarrier.StartupProjectFormViewModel

@{
    ViewBag.Title = "Project Form";

}

@*<h2>Edit</h2>*@

<div id="Message"><h5>All data are automatically saved, when your change tab or shut down the page. In order to finish the form, submit!</h5></div>

@*úsing(Ajax.BeginForm())*@
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <div id="wizard">
            <h3>@ViewBag.Title</h3>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            @Html.HiddenFor(model => model.StartupID)
            @Html.HiddenFor(model => model.UserID, new { htmlAttributes = new { @class = "form-control" } })

            @if (ViewData.ModelState.Any(x => x.Value.Errors.Any()))
            {
                <div class="alert alert-danger"> @*id="Message"*@
                    <a href="#" class="close" data-dismiss="alert">×</a>
                    <h4>Validation Errors</h4>
                    @Html.ValidationSummary()
                </div>
            }

            <!-- Tabstrip -->
            <ul class="nav nav-tabs" role="tablist">
                <li role="presentation" class="active">
                    <a href="#Project" role="tab" data-toggle="tab">Project</a>
                </li>
                <li role="presentation">
                    <a href="#Funding" role="tab" data-toggle="tab">Funding</a>
                </li>
                <li role="presentation">
                    <a href="#Budget" role="tab" data-toggle="tab">Budget</a>
                </li>
                <li role="presentation">
                    <a href="#Team" role="tab" data-toggle="tab">Team</a>
                </li>
                <li role="presentation">
                    <a href="#Outcome" role="tab" data-toggle="tab">Outcome</a>
                </li>
                <li role="presentation">
                    <a href="#RelatedFiles" role="tab" data-toggle="tab">Related Files</a>
                </li>
            </ul>
            
            <br/><br />
            <!-- Tab panes -->
            <div class="tab-content">

                <div role="tabpanel" class="tab-pane active" id="Project">
                    <div class="form-group">
                        @Html.LabelFor(model => model.StartupName, htmlAttributes: new { @class = "control-label col-md-2", @style = "text-align: left" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.StartupName, new { htmlAttributes = new { @class = "form-control", placeholder = "This is for you only" } })
                            @Html.ValidationMessageFor(model => model.StartupName, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    @*@Html.HiddenFor(model => model.CountryID, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.HiddenFor(model => model.SwedishRegion, new { htmlAttributes = new { @class = "form-control" } })*@

                    <div class="form-group">
                        @Html.LabelFor(model => model.ProjectDomainID, htmlAttributes: new { @class = "control-label col-md-2", @style = "text-align: left" })
                        <div class="col-md-10">
                            @Html.DropDownListFor(model => model.ProjectDomainID, (SelectList)ViewBag.projectDomainIdEdit, "Please select a domain", new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.ProjectDomainID, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.DeadlineDate, htmlAttributes: new { @class = "control-label col-md-2", @style = "text-align: left" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.DeadlineDate, new { htmlAttributes = new { @class = "form-control date-picker", onkeydown = "return false", onpaste = "return false", placeholder = "Time you give us to find funding for you" } })
                            @Html.ValidationMessageFor(model => model.DeadlineDate, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.ProjectSummary, htmlAttributes: new { @class = "control-label col-md-2", @style = "text-align: left" })
                        <div class="col-md-10">
                            @Html.TextAreaFor(model => model.ProjectSummary, 15, 100, new { htmlAttributes = new { @class = "form-control" }, @onkeyup = "countChar(this)", maxlength = "1500", placeholder = "Add summary about the project idea, note that any information that can identify you, your company or project or someone in the team will be deleted during auditing stage" })
                            @Html.ValidationMessageFor(model => model.ProjectSummary, "", new { @class = "text-danger" })
                            <label id="charcounter" style="color:green"></label>
                        </div>
                    </div>
                    
                    <div class="form-group">
                        @Html.LabelFor(model => model.AllowSharing, htmlAttributes: new { @class = "control-label col-md-9  col-md-offset-2", @style = "text-align: left" })
                        <div class="col-md-1">
                            <div class="checkbox">
                                @Html.EditorFor(model => model.AllowSharing)
                            </div>
                        </div>
                        @Html.ValidationMessageFor(model => model.AllowSharing, "", new { @class = "text-danger col-md-9 col-md-offset-2" })
                    </div>

                    <div class="form-group">
                        <label class="control-label col-md-2" style="text-align: left">Allow us to share to investors:</label>
                        <div class=" col-md-offset-0 col-md-9" style="margin-left:inherit">
                            <table class="borderless">
                                <tr>
                                    @{ List<EoS.Models.IdeaCarrier.AllowedInvestorViewModel> Investors = ViewBag.AllowedInvestorsViewModel;
                                        foreach (var investor in Investors)
                                        {
                                            @:<td><input type="checkbox" name="selectedSharedToInvestors" value="@investor.AllowedInvestorID" @(Html.Raw(investor.Assigned ? "checked=\"checked\"" : "")) /> @investor.AllowedInvestorName</td>
                                            @:</tr><tr>
                                        }
                                    }
                                </tr>
                            </table>
                            @Html.ValidationMessageFor(model => model.AllowedInvestors, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.ScalabilityID, htmlAttributes: new { @class = "control-label col-md-2", @style = "text-align: left" })
                        <div class="col-md-10">
                            @Html.DropDownListFor(model => model.ScalabilityID, (SelectList)ViewBag.ScalabilityIdEdit, "Please select a scalability", new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.ScalabilityID, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div> <!--Project tab end-->

                <div role="tabpanel" class="tab-pane" id="Funding">
                    <div class="form-group">
                        @Html.LabelFor(model => model.FundingPhaseID, htmlAttributes: new { @class = "control-label col-md-2", @style = "text-align: left" })
                        <div class="col-md-10">
                            @Html.DropDownListFor(model => model.FundingPhaseID, (SelectList)ViewBag.FundingPhaseIdEdit, "Please select a funding phase", new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.FundingPhaseID, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.FundingAmountID, htmlAttributes: new { @class = "control-label col-md-2", @style = "text-align: left" })
                        <div class="col-md-10">
                            @Html.DropDownListFor(model => model.FundingAmountID, (SelectList)ViewBag.FundingNeedIdEdit, "Please select a funding amount", new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.FundingAmountID, "", new { @class = "text-danger" })
                        </div>
                    </div>

                   
                    <div class="form-group">
                        @Html.LabelFor(model => model.EstimatedExitPlanID, htmlAttributes: new { @class = "control-label col-md-2", @style = "text-align: left" })
                        <div class="col-md-10">
                            @Html.DropDownListFor(model => model.EstimatedExitPlanID, (SelectList)ViewBag.EstimatedExitPlanIdEdit, "Please select an estimated exit plan", new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.EstimatedExitPlanID, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.FutureFundingNeeded, htmlAttributes: new { @class = "control-label col-md-2", @style = "text-align: left" })
                        <div class="col-md-9">
                            <div class="checkbox col-md-10">
                                @Html.EditorFor(model => model.FutureFundingNeeded)
                                @Html.ValidationMessageFor(model => model.FutureFundingNeeded, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.AlreadySpentTime, htmlAttributes: new { @class = "control-label col-md-2", @style = "text-align: left" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.AlreadySpentTime, new { htmlAttributes = new { @class = "form-control", @placeholder = "In term of hours, 0 for none" } })
                            @Html.ValidationMessageFor(model => model.AlreadySpentTime, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.AlreadySpentMoney, htmlAttributes: new { @class = "control-label col-md-2", @style = "text-align: left" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.AlreadySpentMoney, new { htmlAttributes = new { @class = "form-control", @placeholder = "In term of SEK amount, 0 for none" } })
                            @Html.ValidationMessageFor(model => model.AlreadySpentMoney, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.WillSpendOwnMoney, htmlAttributes: new { @class = "control-label col-md-2", @style = "text-align: left" })
                        <div class="col-md-9">
                            <div class="checkbox col-md-10">
                                @Html.EditorFor(model => model.WillSpendOwnMoney)
                                @Html.ValidationMessageFor(model => model.WillSpendOwnMoney, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>                   
                    
                </div> <!--Funding tab end-->

                <div role="tabpanel" class="tab-pane" id="Budget">

               
                    
                    <div class="form-group">
                        <label class="control-label col-md-2" style="text-align: left">How funding will be spent?</label>
                        <div class=" col-md-offset-0 col-md-9" style="margin-left:inherit">
                            @{
                                <table class="borderless">
                                    <tr>
                                      @{
                                          for (var j = 0; j < Model.ProjectFundingDivisions.Count(); j++)
                                          {
                                            <td>@Html.DisplayFor(model => model.ProjectFundingDivisions[j].FundingDivision.FundingDivisionName)</td>
                                            <td>@Html.EditorFor(model => model.ProjectFundingDivisions[j].Percentage, new { htmlAttributes = new { @class = "form-control" } })</td>
                                            @:</tr><tr>
                                         //Model.ProjectFundingDivisions.Add(new EoS.Models.Shared.FundingDivisionStartup { FundingDivisionID = Model.ProjectFundingDivisions[j].FundingDivisionID, StartupID = Model.ProjectFundingDivisions[j].StartupID, Percentage = Model.ProjectFundingDivisions[j].Percentage });
                                          }

                                    }
                                    </tr>
                                </table>
                            }
                        </div>
                    </div>
                    

                    @*<div class="form-group">
                        <label class="control-label col-md-2" style="text-align: left">How funding will be spent?</label>
                        <div class=" col-md-offset-0 col-md-9" style="margin-left:inherit">
                            @{var FundingDivisionsList2 = new List<EoS.Models.Shared.FundingDivisionStartup>();
                                <table class="borderless">
                                    <tr>*@
                                        @{@*List<EoS.Models.Shared.FundingDivisionStartup> FundingDivisionsList = ViewBag.FundingDivisionsList;*@
                                            @*@FundingDivisionsList.Count();*@
                                            //var i = 0;
                                            //FundingDivisionsList2.Capacity = FundingDivisionsList.Count();
                                            //foreach (var item in FundingDivisionsList)
                                            //{

                                            @:
                                            @*<td>@Html.DisplayFor(model => item.FundingDivision.FundingDivisionName)</td>*@
                                            @*@:<td>@Html.EditorFor(model => item.Percentage, new { htmlAttributes = new { @class = "form-control" } })</td>*@
                                                @*@:<td>@Html.EditorFor(model => FundingDivisionsList[i].Percentage , new { htmlAttributes = new { @class = "form-control"} })</td>*@
                                                @*@:<td>@Html.EditorFor(model => item.Percentage, new { htmlAttributes = new { @class = "form-control", @onchange = "showMe(this," + i + ")" } })</td>*@


                                                @*@:<td><input type="hidden" name="FundingDivisionsList" value="@Model.FundingDivisionStartups.Where(s=>s.StartupID == Model.StartupID)" /></td>*@
                                                //FundingDivisionsList[i].Id = item.Id;
                                                //FundingDivisionsList[i].FundingDivisionID = item.FundingDivisionID;
                                                //FundingDivisionsList[i].StartupID = item.StartupID;
                                                //FundingDivisionsList[i].Percentage = item.Percentage;


                                                //FundingDivisionsList[i].Percentage =
                                                //@onchange = "showMe(this,"+i+")"}
                                                //FundingDivisionsList[i].Percentage = @Html.EditorFor(item.Percentage)
                                                //FundingDivisionsList[i].Percentage = item.Percentage;
                                                //FundingDivisionsList[i].Percentage = EditorExtensions.EditorFor(item.Percentage,)
                                                 @*@:<td><input type="hidden" name="FundingDivisionsList2" value="@ViewBag.FundingDivisionsList" /></td>*@
                                        @*@:<td><input type="hidden" name="FundingDivisionsList" value="@item" /></td>*@
                                        @*@:</tr><tr>
                                        i++;*@

                                                @*@Html.Hidden("FundingDivisionsList", FundingDivisionsList.Add(new EoS.Models.Shared.FundingDivisionStartup { })) *@
                                            }
                                            @*{ TempData["FundingDivisionsList"] = FundingDivisionsList; }
                                        }

                                    </tr>

                                </table>
                            }
                        </div>
                    </div>*@

                    <div class="form-group">
                        @Html.LabelFor(model => model.EstimatedBreakEven, htmlAttributes: new { @class = "control-label col-md-2", @style = "text-align: left" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.EstimatedBreakEven, new { htmlAttributes = new { @class = "form-control", @placeholder = "In term of years" } })
                            @Html.ValidationMessageFor(model => model.EstimatedBreakEven, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.PossibleIncomeStreams, htmlAttributes: new { @class = "control-label col-md-2", @style = "text-align:left" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.PossibleIncomeStreams, new { htmlAttributes = new { @class = "form-control", @placeholder = "0 to 10" } })
                            @Html.ValidationMessageFor(model => model.PossibleIncomeStreams, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.HavePayingCustomers, htmlAttributes: new { @class = "control-label col-md-3", @style = "text-align:left; width:220px" })
                        <div class="col-md-9">
                            <div class="checkbox">
                                @Html.EditorFor(model => model.HavePayingCustomers)
                                @Html.ValidationMessageFor(model => model.HavePayingCustomers, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                </div> <!--Budget tab end-->

                <div role="tabpanel" class="tab-pane" id="Team">
                    <div class="form-group">
                        @Html.LabelFor(model => model.TeamMemberSize, htmlAttributes: new { @class = "control-label col-md-2", @style = "text-align: left" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.TeamMemberSize, new { htmlAttributes = new { @class = "form-control",  @placeholder ="1 to 10" } })
                            @Html.ValidationMessageFor(model => model.TeamMemberSize, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.TeamExperience, htmlAttributes: new { @class = "control-label col-md-2", @style = "text-align: left" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.TeamExperience, new { htmlAttributes = new { @class = "form-control", @placeholder = "Collective yearly knowledge, #years ",  Title = "Collective yearly knowledge benefiting project, #years "} })
                            @Html.ValidationMessageFor(model => model.TeamExperience, "", new { @class = "text-danger" })
                        </div>
                    </div>

                   <br/>
                    <div class="form-group">
                        @Html.LabelFor(model => model.TeamVisionShared, htmlAttributes: new { @class = "control-label col-md-4", @style = "text-align: left" })
                        <div class="col-md-4 col-md-offset-0">
                            <div class="checkbox">
                                @Html.EditorFor(model => model.TeamVisionShared)
                                @Html.ValidationMessageFor(model => model.TeamVisionShared, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.HaveFixedRoles, htmlAttributes: new { @class = "control-label col-md-4", @style = "text-align: left" })
                        <div class="col-md-5 col-md-offset-0">
                            <div class="checkbox">
                                @Html.EditorFor(model => model.HaveFixedRoles)
                                @Html.ValidationMessageFor(model => model.HaveFixedRoles, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="form-group">
                        <label class="control-label col-md-4" style = "text-align: left">Weaknesses of the Team:</label>
                        <div class="col-md-8" style="margin-left:inherit">
                            <table class="borderless">
                                <tr>
                                    @{ List<EoS.Models.IdeaCarrier.TeamWeaknessesViewModel> weaknesses = ViewBag.weaknessesViewModel;
                                        foreach (var weakness in weaknesses)
                                        {
                                            @:
                                            <td><input type="checkbox" name="selectedWeaknesses" value="@weakness.WeaknessID" @(Html.Raw(weakness.Assigned ? "checked=\"checked\"" : "")) /> @weakness.WeaknessName</td>
                                            //???
                                            @:</tr><tr>
                                        }
                                    }
                                </tr>
                            </table>
                        </div>
                     </div>
                    <br />
                </div> <!--Team tab end-->

                <div role="tabpanel" class="tab-pane" id="Outcome">

                    <div class="form-group">
                        <label class="control-label col-md-2">The outcome</label>
                        <div class=" col-md-offset-2 col-md-10" style="margin-left:inherit">
                            <table class="borderless">
                                <tr>
                                    @{ List<EoS.Models.IdeaCarrier.StartupOutcomeViewModel> OutComes = ViewBag.outcomesViewModel;
                                        foreach (var outcome in OutComes)
                                        {
                                            @:<td><input type="checkbox" name="selectedOutcomes" value="@outcome.OutcomeID" @(Html.Raw(outcome.Assigned ? "checked=\"checked\"" : "")) /> @outcome.OutcomeName</td>
                                            @*???*@
                                            @:</tr><tr>
                                        }
                                    }
                                </tr>
                            </table>
                            @Html.ValidationMessageFor(model => model.Outcomes, "", new { @class = "text-danger" })
                        </div>
                    </div>
                   <br/>

                    <div class="form-group">
                        @Html.LabelFor(model => model.InnovationLevelID, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownListFor(model => model.InnovationLevelID, (SelectList)ViewBag.InnovationLevelIdEdit, "Please select a level of innovation", new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.InnovationLevelID, "", new { @class = "text-danger" })
                        </div>
                    </div>

                </div> <!--Outcome tab end-->

                <div role="tabpanel" class="tab-pane" id="RelatedFiles">

                    @Html.HiddenFor(model => model.CreatedDate, new { htmlAttributes = new { @class = "form-control" } })

                    @Html.Action("DocumentList", new { startupID = Model.StartupID })

                    @if (ViewBag.AllowedToUploadMore == true)
                    {
                        
                        <div style="position: absolute;">
                            <input type="submit" value="Upload File" class="btn btn-primary" name="submitCommand" />
                        </div>
                    }
                </div> <!--RealtedFiles tab end-->
                
                </div> <!-- Tab panes end -->
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                       
                        <div style="float:right">
                            <input type='button' class='btn button-next' name='next' value='Next' />
                            <input type='button' class='btn button-last' name='last' value='Last' />
                        </div>
                        <div style="float:left">
                            <input type='button' class='btn button-first' name='first' value='First' />
                            <input type='button' class='btn button-previous' name='previous' value='Previous' />
                        </div>
                        <div class="col-md-offset-4">
                            <input type="submit" value="Submit" class="btn btn-default" name="submitCommand"  onclick = "return confirm('Are you sure you wish to submit this form then no longer be editable?');" />
                            @*<input type="submit" value="Save & continue later" class="btn btn-default " />*@
                            @Html.ActionLink("Back to Startup Projects", "Index", null, new { @class = "btn btn-default " })
                        </div>
                    </div>
                </div>
            </div>
    </div>
}

@*<div>
    @Html.ActionLink("Back to List", "Index")
</div>*@

@section Scripts {


}
