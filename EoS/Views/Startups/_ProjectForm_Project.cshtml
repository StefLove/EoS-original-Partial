@model EoS.Models.IdeaCarrier.Startup

<div class="form-group">
    @Html.LabelFor(model => model.StartupName, htmlAttributes: new { @class = "control-label col-md-2", @style = "text-align:left" })
    <div class="col-md-10">
        @Html.EditorFor(model => model.StartupName, new { htmlAttributes = new { @class = "form-control", placeholder = "This is for you only" } })
        @Html.ValidationMessageFor(model => model.StartupName, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.ProjectDomainID, htmlAttributes: new { @class = "control-label col-md-2", @style = "text-align:left" })
    <div class="col-md-10">
        @Html.DropDownListFor(model => model.ProjectDomainID, (SelectList)ViewBag.projectDomainIdEdit, "Please select a domain", new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.ProjectDomainID, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.DeadlineDate, htmlAttributes: new { @class = "control-label col-md-2", @style = "text-align:left" })
    <div class="col-md-10">
        @Html.EditorFor(model => model.DeadlineDate, new { htmlAttributes = new { @class = "form-control date-picker", onkeydown = "return false", onpaste = "return false", @placeholder = "Time you give us to find funding for you" } })
        @Html.ValidationMessageFor(model => model.DeadlineDate, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.ProjectSummary, htmlAttributes: new { @class = "control-label col-md-2", @style = "text-align:left" })
    <div class="col-md-10">
        @Html.TextAreaFor(model => model.ProjectSummary, 15, 150, new { htmlAttributes = new { @class = "form-control" }, @onkeyup = "countChar(this)", maxlength = "1500", @placeholder = "Add summary about the project idea, note that any information that can identify you, your company or project or someone in the team will be deleted during auditing stage (plain text only)" })
        @Html.ValidationMessageFor(model => model.ProjectSummary, "", new { @class = "text-danger" })
        <label id="charcounter" style="color:green"></label>
    </div>
</div>

<div class="form-group">

    @*if (string.IsNullOrWhiteSpace(Model.AllowSharingDisplayName))
        {
            Html.LabelFor(model => model.AllowSharing, htmlAttributes: new { @class = "control-label col-md-2", @style = "text-align:left" })
        }
        else
        {
            Html.DisplayFor(model => model.AllowSharingDisplayName, new { class = "control-label col-md-2", style = "text-align: left" })
            Html.Raw("<span class=\"control-label col-md-2\" style = \"text-align:left;font-weight:bold\">" + Model.AllowSharingDisplayName + "</span>");
        }*@

    @Html.LabelFor(model => model.AllowSharing, htmlAttributes: new { @class = "control-label col-md-2", @style = "text-align:left" }) @*col-md-9  col-md-offset-2"*@
    <div class="col-md-1">
        <div class="checkbox">
            @Html.EditorFor(model => model.AllowSharing)
        </div>
    </div>
    @Html.ValidationMessageFor(model => model.AllowSharing, "", new { @class = "text-danger col-md-9 col-md-offset-2" })
</div>

<div class="form-group">
    <label class="control-label col-md-2" style="text-align: left">Allow us to share to investors</label>
    <div class=" col-md-offset-0 col-md-9" style="margin-left:inherit">
        <table class="borderless">
            <tr>
                @{ List<EoS.Models.IdeaCarrier.AllowedInvestorViewModel> Investors = ViewBag.AllowedInvestorsViewModel;
                    foreach (var investor in Investors)
                    {
                        @:<td><input type="checkbox" name="selectedSharedToInvestors" value="@investor.AllowedInvestorID" @(Html.Raw(investor.Assigned ? "checked=\"checked\"" : "")) /> @investor.AllowedInvestorName</td>
                        @:</tr><tr>
                    }
                }
            </tr>
        </table>
        @Html.ValidationMessageFor(model => model.AllowedInvestors, "", new { @class = "text-danger" })
    </div>
</div>

<br />&nbsp;<br />
