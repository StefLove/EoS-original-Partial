@model EoS.Models.MMM.MatchMaking

@{
    ViewBag.Title = "Match making result details";
}

<h3>@ViewBag.Titles</h3>

@if (!string.IsNullOrEmpty(ViewBag.Message))
{
    <div class="warning">@ViewBag.Message</div>
}

<div>
    @*<h4>Match making</h4>*@
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.MatchMakingDate)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.MatchMakingDate)
        </dd>
        @*<dt>
            @Html.DisplayNameFor(model => model.Sent)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Sent)
        </dd>*@
        <dt>
            @Html.DisplayNameFor(model => model.InvestmentId)
        </dt>
        <dd>
            <span class="visible-print">@Model.InvestmentId</span>
            @Html.ActionLink(Model.InvestmentId, "ProfileDetails", "Investments", new { id = Model.InvestmentId }, new { @class = "hidden-print", target = "_blank" })
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.StartupId)
        </dt>
        <dd>
            <span class="visible-print">@Model.StartupId</span>
            @Html.ActionLink(Model.StartupId, "ProjectDetails", "Startups", new { id = Model.StartupId }, new { @class = "hidden-print", target = "_blank" })
        </dd>

        @if (Model.ProjectDomainMatched.HasValue)
        {
            <dt>
                @Html.DisplayNameFor(model => model.ProjectDomainMatched) @*1*@
            </dt>
            <dd>
                @(Model.ProjectDomainMatched.Value ? "matches" : "doesn't match")
                @*@Html.DisplayFor(model => model.ProjectDomainMatched.Value)*@
            </dd>
        }

        @if (Model.FundingPhaseMatched.HasValue)
        {
            <dt>
                @Html.DisplayNameFor(model => model.FundingPhaseMatched) @*2*@
            </dt>
            <dd>
                @(Model.FundingPhaseMatched.Value ? "matches" : "doesn't match")
                @*@Html.DisplayFor(model => model.FundingPhaseMatched.Value)*@
            </dd>
        }

        @if (Model.FundingAmountMatched.HasValue)
        { //<-------------------------------------------------------
            <dt>
                @Html.DisplayNameFor(model => model.FundingAmountMatched) @*3*@
            </dt>
            <dd>
                @(Model.FundingAmountMatched.Value ? "matches" : "doesn't match")
                @*@Html.DisplayFor(model => model.FundingAmountMatched.Value)*@
            </dd>
        }

        @if (Model.EstimatedExitPlanMatched.HasValue)
        {
            <dt>
                @Html.DisplayNameFor(model => model.EstimatedExitPlanMatched) @*4*@
            </dt>
            <dd>
                @(Model.EstimatedExitPlanMatched.Value ? "matches" : "doesn't match")
                @*@Html.DisplayFor(model => model.EstimatedExitPlanMatched.Value)*@
            </dd>
        }

        @if (Model.TeamSkillsMatched.HasValue)
        {
            <dt>
                @Html.DisplayNameFor(model => model.TeamSkillsMatched) @*5*@
            </dt>
            <dd>
                @(Model.TeamSkillsMatched.Value ? "match" : "don't match")
                @*@Html.DisplayFor(model => model.TeamSkillsMatched.Value)*@
            </dd>
        }

        @if (Model.OutcomesMatched.HasValue)
        {
            <dt>
                @Html.DisplayNameFor(model => model.OutcomesMatched) @*6*@
            </dt>
            <dd>
                @(Model.OutcomesMatched.Value ? "match" : "don't match")
                @*@Html.DisplayFor(model => model.OutcomesMatched.Value)*@
            </dd>
        }

        @if (Model.InnovationLevelMatched.HasValue)
        {
            <dt>
                @Html.DisplayNameFor(model => model.InnovationLevelMatched) @*7*@
            </dt>
            <dd>
                @(Model.InnovationLevelMatched.Value ? "matches" : "doesn't match")
                @*@Html.DisplayFor(model => model.InnovationLevelMatched.Value)*@
            </dd>
        }

        @if (Model.ScalabilityMatched.HasValue)
        {
            <dt>
                @Html.DisplayNameFor(model => model.ScalabilityMatched) @*8*@
            </dt>
            <dd>
                @(Model.ScalabilityMatched.Value ? "matches" : "doesn't match")
                @*@Html.DisplayFor(model => model.ScalabilityMatched.Value)*@
            </dd>
        }

        @*<dt>
            @Html.DisplayNameFor(model => model.TeamMemberSizeMatched)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.TeamMemberSizeMatched)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.TeamExperienceMatched)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.TeamExperienceMatched)
        </dd>*@

        <dt>
            @Html.DisplayNameFor(model => model.NoOfMatches)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.NoOfMatches) (of @Html.DisplayFor(model => model.MaxNoOfMatches))
        </dd>
        
        <dt>
            @Html.DisplayNameFor(model => model.Sent)
        </dt>
        <dd>
            @*@Html.DisplayFor(model => model.Sent)*@
            @(Model.Sent ? "Yes" : "No")&nbsp;
            @if (!Model.Sent)
            {
                <span class="hidden-print">
                    @Html.ActionLink("Send report to Investor", "Details", "MatchMakings", new { id = Model.MatchMakingId, sendReport = true }, new { @class = "btn btn-primary", @style = "height:25px;padding:1px" })
                </span>
            }
        </dd>

    </dl>
</div>

    <p class="hidden-print">
        @Html.ActionLink("Back to Result list", "Results", new { dateTime = Model.MatchMakingDate }) |
        @Html.ActionLink("Delete", "Delete", new { id = Model.MatchMakingId }, new { @style = "color:red" })
    </p>

