@model EoS.Models.Investor.InvestmentProfileViewModel

<div class="@(Model.UnansweredQuestion == "EstimatedExitPlans" ? "form-group warning" : "form-group")">
    <label class="control-label col-md-2" style="text-align:left">Estimated exit plans</label>
    <div class=" col-md-offset-2 col-md-10" style="margin-left:0">
        <table class="borderless">
            <tr>
                @{
                    foreach (var estimatedExitPlan in Model.EstimatedExitPlans)
                    {
                        <td><input type="checkbox" name="EstimatedExitPlanIDs" value="@estimatedExitPlan.EstimatedExitPlanID" @(estimatedExitPlan.Assigned ? "checked=\"checked\"" : "") /> @estimatedExitPlan.EstimatedExitPlanName </td>
                        @:</tr><tr>
                    }
                }
            </tr>
        </table>
    </div>
</div>

<div class="@(Model.UnansweredQuestion == "EstimatedBreakEven" ? "form-group warning" : "form-group")">
    @Html.LabelFor(model => model.EstimatedBreakEven, htmlAttributes: new { @class = "control-label col-md-2", @style = "text-align:left" })
    <div class="col-md-10">
        @Html.EditorFor(model => model.EstimatedBreakEven, new { htmlAttributes = new { @class = "form-control", @placeholder = "In term of years, 10 equals to any number" } })
        @Html.ValidationMessageFor(model => model.EstimatedBreakEven, "", new { @class = "text-danger" })
    </div>
</div>

<div class="@(Model.UnansweredQuestion == "PossibleIncomeStreams" ? "form-group warning" : "form-group")">
    @Html.LabelFor(model => model.PossibleIncomeStreams, htmlAttributes: new { @class = "control-label col-md-2", @style = "text-align:left" })
    <div class="col-md-10">
        @Html.EditorFor(model => model.PossibleIncomeStreams, new { htmlAttributes = new { @class = "form-control", @placeholder = "10 equals to any number" } })
        @Html.ValidationMessageFor(model => model.PossibleIncomeStreams, "", new { @class = "text-danger" })
    </div>
</div>

<hr />
@if (string.IsNullOrEmpty(Model.UnansweredQuestion))
{
    <div class="col-md-offset-4 hidden-print">
        <input type="button" value="Save your answers for this tab Budget" class="btn btn-warning btn-sm" style="color:black;max-width:500px" onclick="SaveData()" title="in order to return later" />
    </div>
    <div class="col-md-offset-2">
        <h5 class="text-danger">You have to answer all the necessary questions in all tabs before you may submit the form.</h5>
    </div>
}
else
{
    <div class="col-md-offset-4 hidden-print">
        @Html.ActionLink("Cancel submission of form", "SubmitProfileForm", new { id = Model.InvestmentID, cancel = true, redirect = "ProfileForm", redirectTab = "Budget" }, new { @id = "cancelProfileFormSubmission", @class = "btn btn-danger" })
    </div>
}
