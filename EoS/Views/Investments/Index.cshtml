@model IEnumerable<EoS.Models.Investor.Investment>

@*<h4>Your Id: @ViewBag.UserExternalId</h4>*@

@if (ViewBag.UserRole == EoS.Models.Role.Admin.ToString() && ViewBag.Matchable != null)
{
    if (ViewBag.Matchable)
    {
        ViewBag.Title = "Matchable Investment profiles" + (string.IsNullOrEmpty(ViewBag.InvestorUserName) ? "" : " by " + ViewBag.InvestorUserName);
    }
    else if (!ViewBag.Matchable)
    {
        ViewBag.Title = "Unmatchable Investment profiles" + (string.IsNullOrEmpty(ViewBag.InvestorUserName) ? "" : " by " + ViewBag.InvestorUserName);
    }
}
else
{
    //ViewBag.Title = "Investment profiles" + (string.IsNullOrEmpty(ViewBag.InvestorUserName) ? "" : " by " + ViewBag.InvestorUserName);
    ViewBag.Title = (string.IsNullOrEmpty(ViewBag.IdeaCarrierUserName) ? "Investment profiles by " + ViewBag.IdeaCarrierUserName : "Your Investment profiles");
}

<h3>@ViewBag.Title</h3>

@if (ViewBag.UserRole == EoS.Models.Role.Admin.ToString())
{
    <p class="hidden-print">
        @Html.ActionLink("Match all matchable profiles", "Motor", "MatchMakings", new { Id = ViewBag.InvestorId }, new { @class = "btn btn-primary" }) @*<---Hide if none*@
        <text>&nbsp;</text>
        @if (ViewBag.Matchable == null)
        {
            @Html.ActionLink("Show matchable profile", "Index", new { id = ViewBag.InvestorId, matchable = true }, new { @class = "btn btn-success" })
        }
        else if (ViewBag.Matchable)
        {
            @Html.ActionLink("Show unmatchable profiles", "Index", new { id = ViewBag.InvestorId, matchable = false }, new { @class = "btn btn-danger" })
        }
        else if (!ViewBag.Matchable)
        {
            @Html.ActionLink("Show all profiles", "Index", new { id = ViewBag.InvestorId }, new { @class = "btn btn-primary" })
        }
    </p>
}
@if (ViewBag.UserRole == EoS.Models.Role.Investor.ToString())
{
    <p class="hidden-print">
        @Html.ActionLink("Add a new Investment profile", "AddNewProfile") |
        @*@Html.ActionLink("Add a new investment profile", "AddProfile")*@
    </p>
}

<table class="table">
    <tr>
        @if (ViewBag.UserRole == EoS.Models.Role.Admin.ToString() && string.IsNullOrEmpty(ViewBag.InvestorUserName))
        {
            <th>
                @*@Html.Raw("Investor User Name")*@
                @Html.ActionLink("Investor User name", "Index", new { orderBy = "UserName" }, htmlAttributes: new { title = "Order by User name" })
            </th>
            <th>
                @*@Html.DisplayNameFor(model => model.InvestmentID)*@
                @Html.ActionLink(Html.DisplayNameFor(model => model.InvestmentID).ToString(), "Index", new { orderBy = "InvestmentID" }, htmlAttributes: new { title = "Order by Investment profile id" })
            </th>
            <th>
                @Html.ActionLink(Html.DisplayNameFor(model => model.ProfileName).ToString(), "Index", new { orderBy = "ProfileName" }, htmlAttributes: new { title = "Order by Investment profile name" })
            </th>
            <th>
                @*@Html.DisplayNameFor(model => model.CountryID)*@
                @Html.ActionLink(Html.DisplayNameFor(model => model.CountryID).ToString(), "Index", new { orderBy = "Country" }, htmlAttributes: new { title = "Order by Country" })
            </th>
            <th>
                @*@Html.DisplayNameFor(model => model.SwedishRegionID)*@
                @Html.ActionLink(HttpUtility.HtmlDecode(Html.DisplayNameFor(model => model.SwedishRegion).ToString()), "Index", new { orderBy = "SwedishRegion" }, htmlAttributes: new { title = "Order by Swedish region (län)" })
            </th>
        }
        else //Investor
        {
            <th>
                @*@Html.DisplayNameFor(model => model.InvestmentID)*@
                @Html.ActionLink(Html.DisplayNameFor(model => model.InvestmentID).ToString(), "Index", new { orderBy = "InvestmentID" }, htmlAttributes: new { title = "Order by Investment profile id" })
            </th>
            <th>
                @Html.ActionLink(Html.DisplayNameFor(model => model.ProfileName).ToString(), "Index", new { orderBy = "ProfileName" }, htmlAttributes: new { title = "Order by Investment profile name" })
            </th>
        }
        <th>
            @*@Html.DisplayNameFor(model => model.ProjectDomainID)*@
            @Html.ActionLink(Html.DisplayNameFor(model => model.ProjectDomainID).ToString(), "Index", new { orderBy = "ProjectDomainName" }, htmlAttributes: new { title = "Order by Project domain" })
        </th>
        <th>
            @*@Html.Raw("Matches")*@
            @Html.ActionLink("Matches", "Index", new { orderBy = "MatchMakingCount" }, htmlAttributes: new { title = "Order by Match making count" })
        </th>
        @if (ViewBag.UserRole == EoS.Models.Role.Admin.ToString())
        {
            <th>
                @Html.ActionLink("Match makings", "Index", new { orderBy = "MatchMakingCount" }, htmlAttributes: new { title = "Order by Match making count" })
            </th>         
        }
        <th>
            @*@Html.DisplayNameFor(model => model.DueDate)*@
            @Html.ActionLink(Html.DisplayNameFor(model => model.DueDate).ToString(), "Index", new { orderBy = "DueDate" }, htmlAttributes: new { title = "Order by Due date" })
        </th>
        <th>
            @*@Html.DisplayNameFor(model => model.CreatedDate)*@
            @Html.ActionLink(Html.DisplayNameFor(model => model.CreatedDate).ToString(), "Index", new { orderBy = "CreatedDate" }, htmlAttributes: new { title = "Order by Created date" })
        </th>
        @if (ViewBag.UserRole == EoS.Models.Role.Admin.ToString())
        {
        <th>
            @*@Html.Raw("Days since Last Saved")*@
            @Html.ActionLink("Profile form", "Index", new { orderBy = "LastSavedDate" }, htmlAttributes: new { title = "Order by Last saved date" })
        </th>
        }
        <th>
            @*@Html.DisplayNameFor(model => model.Active)*@
            @Html.ActionLink(Html.DisplayNameFor(model => model.Active).ToString(), "Index", new { orderBy = "Active" }, htmlAttributes: new { title = "Order by Active profile" })
        </th>
        <th class="hidden-print"></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            @if (ViewBag.UserRole == EoS.Models.Role.Admin.ToString() && string.IsNullOrEmpty(ViewBag.InvestorUserName))
            {
                <td>
                    @Html.DisplayFor(modelItem => item.User.UserName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.InvestmentID)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ProfileName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Country.CountryAbbreviation)
                </td>
                <td>
                    @if (item.SwedishRegionID.HasValue)
                    {
                        @Html.DisplayFor(modelItem => item.SwedishRegion.RegionName)
                    }
                </td>
            }
            else if (ViewBag.UserRole == EoS.Models.Role.Admin.ToString())
            {
                <td>
                    @Html.DisplayFor(modelItem => item.InvestmentID)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ProfileName)
                </td>
            }
            <td>
                @Html.DisplayFor(modelItem => item.ProjectDomain.ProjectDomainName)
            </td>
            <td>
                @item.MatchMakings.Count()
            </td>
            @if (ViewBag.UserRole == EoS.Models.Role.Admin.ToString())
            {
                <td>
                    @if (item.Locked && item.Active && (!item.DueDate.HasValue || item.DueDate.HasValue && item.DueDate.Value.Date > DateTime.Now.Date))
                    {
                        @Html.ActionLink("Match", "Motor", "MatchMakings", new { id = item.InvestmentID }, new { @class = "btn btn-primary" })
                    }
                    else
                    {
                        @Html.Raw("None");
                    }
                </td>
                <td>
                    @if (item.DueDate.HasValue && DateTime.Now.Date > item.DueDate.Value.Date)
                    {
                        @Html.ActionLink("Date passed", "EditAdmin", new { id = item.InvestmentID }, new { @class = "btn btn-danger" })
                    }
                    else if (item.DueDate.HasValue && DateTime.Now.Date == item.DueDate.Value.Date)
                    {
                        @Html.ActionLink("Today", "EditAdmin", new { id = item.InvestmentID }, new { @class = "btn btn-danger" })
                    }
                    else if (item.DueDate.HasValue)
                    {
                        int dueDays = item.DueDate.Value.Date.Subtract(DateTime.Now.Date).Days;
                        @Html.Raw("In " + dueDays + (dueDays == 1 ? " day" : " days"));
                        @*@Html.DisplayFor(modelItem => item.DueDate)*@
                    }
                    else
                    {
                        @Html.Raw("Never")
                    }
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CreatedDate)
                </td>
                <td>
                    @if (item.Locked)
                    {
                        @Html.ActionLink("Unlock it", "Unlock", new { id = item.InvestmentID }, new { @class = "btn btn-success" })
                    }
                    else
                    {
                        int daysSincelastSaved = DateTime.Now.Date.Subtract(item.LastSavedDate.Date).Days;
                        string message = daysSincelastSaved + (daysSincelastSaved == 1 ? " day" : " days") + " since last saved";
                        @Html.Raw(message);
                        <span class="hidden-print">
                            @if (daysSincelastSaved >= 1)
                            {
                                <text>&nbsp;&nbsp;&nbsp;</text>
                                @Html.ActionLink("Remind", "Reminder", new { id = item.InvestmentID, subject = "Finish Profile form " + item.InvestmentID, message = message, redirect = (string.IsNullOrEmpty(ViewBag.InvestorUserName) ? "" : "IndexUser") }, new { @class = "btn btn-danger hidden-print" })
                            }
                        </span>
                    }
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Active)
                </td>
            }
            else //Investor
            {
                <td>
                    @Html.DisplayFor(modelItem => item.CreatedDate)
                </td>
                <td>
                    @if (item.DueDate.HasValue && DateTime.Now.Date > item.DueDate.Value.Date)
                    {
                        @Html.ActionLink("Pay", "Contact", "Home", new { subject = "Pay for " + item.InvestmentID }, new { @class = "btn btn-danger" })
                    }
                    else if (item.DueDate.HasValue)
                    {
                        int dueDays = item.DueDate.Value.Date.Subtract(DateTime.Now.Date).Days;
                        @Html.Raw("In " + dueDays.ToString() + (dueDays == 1 ? " day" : " days"))
                        @*@Html.DisplayFor(modelItem => item.DueDate)*@
                    }
                    else
                    {
                        @Html.Raw("Never")
                    }
                </td>
                <td>
                    @if (!item.Locked)
                    {
                        @Html.ActionLink("Finish it", "ProfileForm", new { id = item.InvestmentID }, new { @class = "btn btn-danger" })
                    }
                    else
                    {
                        @Html.ActionLink("Unlock it", "Contact", "Home", new { subject = "Unlock " + item.InvestmentID }, new { @class = "btn btn-success" })
                    }
                </td>
                <td>
                    @if (item.Active)
                    {
                        @Html.ActionLink("Unactivate", "Activate", new { id = item.InvestmentID }, new { @class = "btn btn-success" })
                    }
                    else
                    {
                        @Html.ActionLink("Activate", "Activate", new { id = item.InvestmentID }, new { @class = "btn btn-primary" })
                    }
                </td>

            }
                <td class="hidden-print">
                    @Html.ActionLink("Details", "ProfileDetails", new { id = item.InvestmentID }) |
                    @Html.ActionLink("Remove", "RemoveProfile", new { id = item.InvestmentID }, new { @style = "color:red" })

                    @*@if (!item.Locked && ViewBag.UserRole == EoS.Models.Role.Investor.ToString())
                    {*@
                    @*<text>| </text>@Html.ActionLink("Form", "ProfileForm", new { id = item.InvestmentID })*@
                    @*<text>| (</text>@Html.ActionLink("Edit Form", "ProfileForm", new { id = item.InvestmentID })*@

                    @*<text>| (</text>@Html.ActionLink("Remove", "RemoveProfile", new { id = item.InvestmentID }, new { @style = "color:red" })<text>)</text>*@
                    @*}*@  @*&& item.DueDate.HasValue*@
                    @*else if (ViewBag.UserRole == EoS.Models.Role.Admin.ToString() && item.DueDate.HasValue)
        {
        <text>| </text>
        @Html.ActionLink("Edit", "EditAdmin", new { id = item.InvestmentID })
        }*@
                </td>
        </tr>
    }
</table>